  anchor box是在bounding box的基础上建立的，如果没有anchor box， 一个grid只有一个bounding box，而引入anchor box后，一个grid可以有多个anchor box。
anchor box的作用是让一个格子（grid）能检查出多个(种)对象。例如：有5个anchor box，则可以检查出5个对象。当对象与其中一个anchor box的IoU最大时，则对象与这个
anchor box匹配。该anchor box的pc为1（pc=1表示该anchor box检测到对象），（bx,by,bh,bw）是对象边框的位置，c是对象的类型。（问题：anchor box的边框位置怎么算？）
  yolo_filter_boxes实现过程：
 1、 将一个grid的每个anchor box的pc *　ｃ(c是各种类型的概率值)，等于每种类型的score。 score的维数是有多少种类型（有多少种类型就有多少种score）。
 2、比较anchor box的各个类型的score，并求出其索引（classes，索引就表示其属于哪一类型），求出最大值（box_class_scores，表示是这一类型的概率是多大）。
 box_class_scores的维数是anchor box的个数。
 3、创建一个filtering mask，其维数与box_class_scores维数一致。当一个anchor box的box_class_scores大于指定的threshold时，fitering mask值为True，否则为false.
 4、运用mask到box_class_scores，boxes（bounding box的坐标），classes。将mask为True的维数保留，
 而将mask为false的维数舍弃。这样，将不需要的anchor box过滤掉，保留需要的anchor box。
  non-max suppression实现过程：
  1、选择得分最高的anchor box。
  2、将其他与该anchor box的iou很高的anchor box舍弃掉。
  （问题：如果两个anchor box检测到的是两个不同的对象，一个是人，一个是车，如果应用non-max suppression会舍弃一个怎么办？
  答案：分别对不同类别的anchor box都做一次non-max suppression）
  
